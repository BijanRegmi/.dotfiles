From 9c90d16e316e25f1573e60ff5c0be97c742cd1c7 Mon Sep 17 00:00:00 2001
From: Bijan Regmi <vizandabijan@gmail.com>
Date: Sat, 5 Feb 2022 21:53:53 +0545
Subject: [PATCH] Theme

---
 config.h | 143 +++++++++++++++++++++++++++++++++++++--------------
 1 file changed, 104 insertions(+), 39 deletions(-)

diff --git a/config.h b/config.h
index 3e8d162..f046bc0 100644
--- a/config.h
+++ b/config.h
@@ -1,7 +1,8 @@
 /* See LICENSE file for copyright and license details. */
+#define wal "/home/immo/.cache/wal/colors-wal-dwm.h"
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 
 // Added by vanity gaps
@@ -19,18 +20,27 @@ static const char *altbarclass      = "Polybar"; /* Alternate bar class name */
 static const char *alttrayname      = "tray";    /* Polybar tray instance name */
 static const char *altbarcmd        = "$HOME/.config/polybar/launch.sh"; /* Alternate bar launch command */
 
-static const char *fonts[]          = { "monospace:size=10" };
+static const char *fonts[]          = { "monospace:size=10", "Noto Sans CJK JP:size=10" };
 static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+#if __has_include(wal)
+#include wal
+#else
+static const char norm_bg[]       	= "#222222";
+static const char norm_border[]     = "#444444";
+static const char norm_fg[]       	= "#bbbbbb";
+static const char sel_fg[]       	= "#eeeeee";
+static const char sel_bg[]          = "#005577";
+static const char sel_border[] 		= "#badee3";
+static const char urg_bg[]			= "#222222";
+static const char urg_fg[]			= "#444444";
+static const char urg_border[]		= "#ff0000";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeNorm] = { norm_fg, 	norm_bg,   norm_border },
+	[SchemeSel]  = { sel_fg, 	sel_bg,    sel_border  },
+	[SchemeUrg]  = { urg_fg, 	urg_bg,	   urg_border  },
 };
+#endif
 // Added by alpha patch
 static const unsigned int baralpha = 0xd0;
 static const unsigned int borderalpha = OPAQUE;
@@ -41,16 +51,15 @@ static const unsigned int alphas[][3]      = {
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "一", "二", "三", "四", "五", "六", "七", "八", "九" };
 
 static const Rule rules[] = {
 	/* xprop(1):
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class      	     instance    title    tags mask     isfloating   CenterThisWindow?     monitor */
+	{ "st",              NULL,       NULL,    0,            0,     	     1,		          	   -1 },
 };
 
 /* layout(s) */
@@ -87,7 +96,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -99,34 +108,91 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", norm_bg, "-nf", norm_fg, "-sb", sel_bg, "-sf", sel_fg, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	
+	/* TOP ROW */
+	{ MODKEY|ShiftMask,             XK_q,      	quit,           {0} },
+
+	{ MODKEY,             			XK_w,      	killclient,     {0} },
+	{ MODKEY|ShiftMask,				XK_w,		spawn,			SHCMD("~/.dotfiles/scripts/toggle_bg.sh") },
+
+	{ MODKEY,						XK_e,		spawn,			SHCMD("rofi -show emoji -modi emoji -font 'JetBrains Mono 10'") },
+
+	{ MODKEY,						XK_r,		spawn,			SHCMD("st ranger") },
+	{ MODKEY|ShiftMask,             XK_r,      	togglesticky,   {0} },
+
+	{ MODKEY,						XK_t,		setlayout,		{.v = &layouts[0]} }, /* tile */
+	{ MODKEY|ShiftMask,				XK_t,		setlayout,		{.v = &layouts[1]} }, /* bstack */
+	{ MODKEY|ControlMask,			XK_t,		spawn,			SHCMD("telegram-desktop") },
+	{ MODKEY,						XK_y,		setlayout,		{.v = &layouts[2]} }, /* spiral */
+	{ MODKEY|ShiftMask,				XK_y,		setlayout,		{.v = &layouts[3]} }, /* dwindle */
+	{ MODKEY,						XK_u,		setlayout,		{.v = &layouts[4]} }, /* deck */
+	{ MODKEY|ShiftMask,				XK_u,		setlayout,		{.v = &layouts[5]} }, /* monocle */
+	{ MODKEY,						XK_i,		setlayout,		{.v = &layouts[6]} }, /* centeredmaster */
+	{ MODKEY|ShiftMask,				XK_i,		setlayout,		{.v = &layouts[7]} }, /* centeredfloatingmaster */
+	{ MODKEY,						XK_o,		setlayout,		{.v = &layouts[8]} }, /* bstackhoriz */
+	{ MODKEY|ShiftMask,				XK_o,		setlayout,		{.v = &layouts[9]} }, /* grid */
+	{ MODKEY,						XK_p,		setlayout, 		{.v = &layouts[10]}}, /* nrowgrid */
+	{ MODKEY|ShiftMask,				XK_p,		setlayout,		{.v = &layouts[11]}}, /* horizgrid */
+	
+	/* HOME ROW */
+	{ MODKEY,		                XK_a,      	togglegaps,     {0} },
+	{ MODKEY|ShiftMask,    			XK_a,      	defaultgaps,    {0} },
+
+	{ MODKEY,						XK_s,		spawn,			SHCMD("spotify") },
+	{ MODKEY|ShiftMask,             XK_s,      	spawn,   		SHCMD("st bash -c 'speedtest && read'") },
+
+	{ MODKEY,                       XK_d,      	spawn,          SHCMD("rofi -modi drun -show drun") },
+	{ MODKEY|ShiftMask,             XK_d,      	spawn,          SHCMD("rofi -show run") },
+	
+	{ MODKEY,						XK_f,		setlayout,		{.v = &layouts[13]}}, /* no layout */
+	{ MODKEY|ShiftMask,				XK_f,		togglefullscr,	{0} },
+
+	{ MODKEY,                       XK_h,      	setmfact,       {.f = -0.05} },
+
+	{ MODKEY,                       XK_j,      	focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_k,      	focusstack,     {.i = -1 } },
+
+	{ MODKEY,                       XK_l,      	setmfact,       {.f = +0.05} },
+
+	
+	/* BOTTOM ROW */
+	{ MODKEY,              			XK_z,      	incrgaps,       {.i = +1 } },
+	{ MODKEY,  					    XK_x,      	incrgaps,       {.i = -1 } },
+
+	{ MODKEY,						XK_c,		spawn,			SHCMD("rofi -show calc -modi calc -no-show-match -no-sort")},
+
+	{ MODKEY,						XK_v,		spawn,			SHCMD("code")},
+	{ MODKEY|ShiftMask,				XK_v,		spawn,			SHCMD("code ~/.dotfiles")},
+
+	{ MODKEY,						XK_b,		spawn,			SHCMD("brave")},
+	{ MODKEY|ShiftMask,             XK_b,      	togglebar,      {0} },
+
+	{ MODKEY,						XK_m,		spawn,			SHCMD("st ncmpcpp& st cava")},
+	
+	{ MODKEY,						XK_n,		shiftview,		{.i = +1} },
+	{ MODKEY|ShiftMask,				XK_n,		shiftview,		{.i = -1} },
+	
+	/* SPECIAL KEYS*/
+	{ MODKEY,             			XK_Return, 	spawn,          {.v = termcmd } },
+
+	{ MODKEY,                       XK_0,      	view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      	tag,            {.ui = ~0 } },
+
+	{ MODKEY,                       XK_comma,  	focusmon,       {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_comma,  	tagmon,         {.i = -1 } },
+
+	{ MODKEY,                       XK_period, 	focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_period, 	tagmon,         {.i = +1 } },
+
+	{ MODKEY,                       XK_space,  	zoom,           {0} },
+
+	{ MODKEY,						XK_Escape,	spawn,			SHCMD("/home/immo/.config/rofi/scripts/powermenu.sh")},
+	
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
@@ -136,7 +202,6 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
 };
 
 /* button definitions */
-- 
2.35.1

